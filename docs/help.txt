网游设计

1、说明
	使用本设计平台游戏设计者可以自定义整个游戏的各个细节，包括各种升级公式、房间、NPC、物品、
技能、任务等，也就是说，使用此平台，完全可以设计出一个全新的手机网游，一切都在乎游戏设计者
本身的意愿和想像力。

2、基本信息
	在游戏设计主界面，有一个“基本信息”菜单，这里是定义游戏的各种最基本的信息，如“游戏名称”、“游戏简介”等。
另外还有玩家的升级公式等也在这里定义。关于升级公式，设计到表达式知识，将在后面介绍。

3、定义属性
	这里可以定义房间、人物等的公共属性。例如，如果给电脑人物属性定义了“年龄”属性，那么，在设计具体的电脑
人物基本属性时，就有“年龄”一项可供定义。如果把“年龄”属性定义为可显示的，那么玩家在查看电脑人物资料时可以
看到电脑人物的“年龄”属性。
	当定义的属性有最大值时（如hp），那么max_hp代表最大体力，hp代表体力。
	举例说明：
	1.属性标识就是属性的ID，你可以设置为任何英文名，如age
	2.属性名称，如“年龄”
	3.值类型，一般选择“数值”
	4.初始值：就是一个初始的数字，如0
	比如玩家的属性里定义了这样一个属性，而且“是否显示”设置为“显示”，那么玩家就可以在自己的状态栏里看到此属性
的显示。在一些事件里（如玩家的注册、登录事件）可以使用u.age=20来设置此属性的值。
	如果定义的是电脑人物或者房间的属性，那么在设计电脑人物或房间的时候，在基本属性里就可以定义此属性的值。

4、定义表达式
	这里可以定义一些全局的表达式，如定义一个名为 exp_xishu=2 的表达式，在其他定义表达式的地方就可以使用{e.exp_xishu}
来引用这个表达式。全局表达式主要用于定义一些可能会经常变更的系数，而这个系数又会被用在很多地方的时候，想
修改这个系数就只需要修改这个全局表达式了。

5、定义装备类别
	可以定义兵器和防具的类别。

6、定义技能
	在这里可以定义游戏中的技能。首先，您必须定义技能默认值，包括技能默认的伤害目标，消耗目标，伤害值公式，消耗值
公式等等。然后即可设计新的技能了。

7、定义公共事件
	这里可以定义NPC和玩家的一些公共事件。例如可以在玩家的“注册事件”里，给玩家加一些钱，给一些初始的基本道具等。

8、设计地图
	可以设计地图的分区。可以增加多个分区。用以区分地图板块。其他一些地图的设计就十分简单，可以去实际操作一下。

9、设计物品
	较为简单，略。

10、设计电脑人物
	略。

11、设计者管理
	可以为游戏增加设计者帐号。

12、关于表达式
	表达式是游戏里非常重要的概念。
	设计时有5个可以引用的对象，分别为
	u：代表主动方
	o：代表被动方
	m：代表技能、帮派对象等
	c：代表系统对象
	e：代表公共表达式
	我们用一个例子来说明表达式：
	如玩家的升级公式：({u.lvl}+1)*({u.lvl}+1)*({u.lvl}+11)+200
	升级公式都是和经验(exp)相关的，意思就是，当玩家的经验达到以上的表达式的值时，就升级。{u.lvl}的意思是取到
玩家的等级(请到玩家的属性设置里查看玩家各个属性的id)。当玩家现在是2级时，当经验达到 (2+1)*(2+1)*(2+11)+200
时，玩家就会升级。
	*代表乘
	/代表除
	+代表加
	-代表减

	另外还有条件表达式的概念，如玩家的升级条件为 {u.lvl}<75，意思是，当玩家的等级小于75时可以升级，否则就不能
升级，也就是说封顶75级。

	另外举一个技能伤害公式的例子：{u.lvl}*({m.lvl}+10)*{m.mod}-{o.recovery}
	这里u表示攻击方（主动方）、o表示被攻击方（被东方）、m表示技能

	一些内置属性（用u为例子，也可以是o代表被动方）：
	{u.attack}：代表对象的兵器杀伤力
	{u.recovery}：代表对象的防具防御力
	{r.u.lvl}：代表一个随机数，即会得到一个 0~对象等级 之间的一个随机整数，又如{r.100}表示得到0~99之间一个随机整数。
	{ut.***}：表示一个临时的属性，可以设置对象的临时属性，临时属性在用户退出游戏后就失效。
	{u.burthen}：用户的总的负重。
	{u.ic.物品id}：用户身上某个物品的数量。
	{u.jv.技能id}：用户的某项技能的等级。
	{u.tasks.任务id}：表示用户身上是否有某个任务，如果为1表示有某个任务，为 2则表示已经完成了此任务。为0表示没有此任务。
	{u.env.***}可以取到用户当前所在房间的属性。***是房间的某个属性名。
	{u.is_pk}为1是pk
	{u.is_practice}为1是比武
	{u.is_polemical}为1是发起pk者
	{u.is_fighting}为1时表示正在战斗中
	{u.callout_adopt_count}获得放出宠物的数量
	{u.callout_adopt.n.name}获得放出的第n个宠物的name属性
	{u.adopt_count}获得拥有宠物的数量
	{u.is_adopt}为1时表示是宠物
	{ut.busy}可以设置几回合内不能出招（忙）
	给玩家设置heart_beat=60表示每60秒执行一次心跳事件，最少要60秒
	表达式变量嵌套一层的功能如：{u.skills.v(m.id).lvl}，v(...)表示取括号内变量的值作为外层变量名称的一部分
	设置和更改值时可以支持变量如：u.{u.input.id} = 1
	在战败后不死亡的npc的创建事件中设置ut.do_drops=1就会一直掉落物品(死后掉落定义里的经验、物品和钱)
	可以使用{u.skills.skill_id.name}获得人物的某个技能的属性，其中skill_id为某个技能id，name为属性名称，如{u.skills.j1.lvl,o.skills.j2.lvl}

	可以使用{u.adopt_owner.name}获得宠物的主人的某个属性，其中name为属性名称,如{u.adopt_owner.lvl},{o.adopt_owner.skills.j1.lvl}
	可以使用u.skills.skill_id.name=***设置人物的技能属性，其中skill_id为某个技能id，name为属性名称，如u.skills.j1.lvl=50
	可以使用u.adopt_owner.name设置宠物的主人的某个属性，其中name为属性名称如u.adopt_owner.hp=100
	帮战的时候，玩家战胜战败事件里面，原来的是否比武is_practice和是否pk的is_pk值都是0，is_clan_combat这个值为1
	{u.refresh_time}为房间离下次刷新的时间（单位分钟）
	{c.area}表示游戏的分区
	{c.time}表示一个秒数，从公元1970年1月1日到当前一共是多少秒。
	{c.year},{c.month},{c.date},{c.day},{c.hour},{c.minute},{c.second}，请看其英文字面的含义就知道了。
	npc的创建事件可以使用触发对象o，可能是场景或玩家
	得到装备对象后可以通过.embed_count表示可镶宝数，{u.equip.b.embed.count}表示已镶宝数，.embed.n.***得到第n个镶物的属性。如{u.equip.b.embed.1.id}
	镶嵌物的装备的卸下事件，事件中u为镶入的镶物，o为镶入到的装备，镶入时只能修改o对象的属性，不能修改o.env的属性，即装备所在人物的属性
	{u.clan.***}可以得到用户帮派的一些属性，其他***是属性名，可以为下面的：
		id：帮派的ID
		name：帮派名
		lvl：帮派的等级
		exp：帮派的经验
		max_members：帮派最大的成员数
		tenet：
		chair_name：帮主的称号
		chairman：帮主的ID
		era
		clan_members：帮派现在的成员数

	{ut.is_computer}为1时，表示是使用电脑的。

	房间的特殊属性：
	user_count：玩家总数
	npc_count：NPC总数
	item_count：物品总数
	npc_count.id：某个id的NPC数量
	item_count.id：某个id的物品数量
	如：{u.env.npc_count.n1}

12、任务
	可以给NPC、房间、物品定义任务。任务在玩家查看NPC（或房间、物品）时会触发。任务有触发条件，接受条件
等。触发条件可以是如：{u.lvl}>=10，表示玩家达到10级时候可以触发此任务；接受条件是指玩家虽然能触发此任务，
但还必须达到此条件时才能接受到。
	任务的接受事件是在玩家接受任务时执行的，此事件的最后一步骤的提示语会被用来作为任务列表中的提示语。
	完成事件是指玩家完成了任务后执行的事件。当然办事任务可能没有完成事件（在另外某些事件里可以删除此办事任务）。

13、事件
	事件是非常重要的一个概念。事件有触发条件、事件步骤等。事件步骤可以有多个，但是，当事件执行到某个事件步骤而
不满足此步骤的执行条件时，整个事件就不会继续执行。
	事件步骤可以进行的操作如下：
		设置属性:如 u.lvl=1    （表示将等级设置为1级）
		更改属性:如 u.exp=10，（表示将经验增加10）；又如 u.money=-10 （表示将钱-10）
		更改物品:
		得到装备:
		学会技能:
		废除技能:
		触发任务:
		删除任务:
		删除已完成任务:
		挑战人物:
		收养对象：
		移动目标:

14、定义字符串类型的属性
	如：u.name=#"{u.name}"+{u.added_gongji}
	其中{u.added_gongji}假设是一个整数，如1234，那么这个人的名字就会被设置为如“吼天怪1234”

15、表达式中的两个符号含义
	&&：并且
	||：或者

16、游戏公共数据存储
	如：可设置 g.test=1
	然后可用 {g.test}来得到值

17、用户输入
	在事件步骤中可以定义输入字段列表（字段名称，类型-字符串或数值），在接着的步骤中可以通过
u.input.name得到输入

18、关于事件步骤里的触发条件与执行条件
	如果触发条件不满足，那整个事件的执行即刻停止，也不会再执行后面的事件步骤。
	如果执行条件不满足，那么表示此事件步骤不会被执行，但会继续执行后面的事件步骤。

19、选择表达式
	例如：0<1?1:0，这个表达式的运算结果是1
	又如：{u.lvl}<=10?1:0，表示，如果等级小于或者等于10级，就取1，否则取0

20、f(...)查找用户对象功能
	 如{f(u.input.id).name}，这样可以取到用户输入的id对应的玩家的名字。
	 又如设置属性：f(u.input.id)t.test=100，设置对应id的用户的临时属性。
	 f(u.input.id).money=100，设置对应id的用户的属性。

*摘自 wap.yytou.com*
